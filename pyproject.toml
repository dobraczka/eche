[tool.poetry]
name = "eche"
version = "0.1.0"
description = "Little helper for handling entity clusters"
authors = ["Daniel Obraczka <obraczka@informatik.uni-leipzig.de>"]
license = "MIT"
readme = "README.md"
keywords = ["entity resolution", "record linkage", "clustering", "connected components", "transitive closure"]
classifiers = ["Development Status :: 4 - Beta", "Programming Language :: Python", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3 :: Only"]
repository = "https://github.com/dobraczka/eche"
packages = [
  {include = "eche", from = "src"},
  {include = "eche/py.typed", from = "src"},
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/dobraczka/eche/issues"
"Source" = "https://github.com/dobraczka/eche"
"Documentation" = "https://eche.readthedocs.io"

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
mkdocs = {version = "^1.5.3", optional = true}
mkdocs-material = {version = "^9.5.9", optional = true}
mkdocstrings = {extras = ["python"], version = "^0.24.0", optional = true}
mkdocs-literate-nav = {version = "^0.6.1", optional = true}
mkdocs-gen-files = {version = "^0.5.0", optional = true}
mkdocs-section-index = {version = "^0.3.8", optional = true}
networkx = "*"

[tool.poetry.extras]
docs = ["mkdocs", "mkdocs-material", "mkdocstrings", "mkdocs-literate-nav", "mkdocs-gen-files", "mkdocs-section-index"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.2.1"
ipdb = "^0.13.13"
mypy = "^1.8.0"
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
nox-poetry = "^1.0.3"
pytest-mock = "^3.12.0"
toml = "^0.10.2"
strawman = "^0.1.3"
pyroma = "^4.2"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1",
]

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
ignore = ["E111", "E114", "E117", "E501", "D1", "D203", "D213", "D206", "D300", "Q000", "Q001", "Q002", "Q003", "COM812", "COM819", "ISC001","ISC002", "B905", "W191", "PLR0913", "PLR0912"]
select = ["B", "C", "E", "F", "W", "B", "I", "D", "UP", "A", "C4", "T10", "ICN", "PIE", "PYI", "PT", "RET", "SIM", "ERA", "PD", "PGH", "PL", "NPY", "PERF", "RUF"]

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.cruft]
skip = ["src/eche/__init__.py", "tests/", "README.md", "docs/"]
